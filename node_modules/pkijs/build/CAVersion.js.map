{"version":3,"sources":["../src/CAVersion.js"],"names":["asn1js","CAVersion","constructor","parameters","certificateIndex","defaultValues","keyIndex","fromSchema","schema","memberName","Error","Integer","blockName","keyIndexBuffer","valueBlock","valueHex","slice","keyIndexView8","Uint8Array","temp","keyIndexView16","Uint16Array","certificateIndexBuffer","certificateIndexView8","certificateIndexView16","toSchema","ArrayBuffer","certificateIndexView","keyIndexView","toJSON"],"mappings":";;;;;;AAAA;;IAAYA,M;;AACZ;;;;AACA;AACA;;;AAGe,MAAMC,SAAN,CACf;AACC;AACA;;;;;AAKAC,cAAYC,aAAa,EAAzB,EACA;AACC;AACA;;;;AAIA,SAAKC,gBAAL,GAAwB,iCAAmBD,UAAnB,EAA+B,kBAA/B,EAAmDF,UAAUI,aAAV,CAAwB,kBAAxB,CAAnD,CAAxB;;AAEA;;;;AAIA,SAAKC,QAAL,GAAgB,iCAAmBH,UAAnB,EAA+B,UAA/B,EAA2CF,UAAUI,aAAV,CAAwB,UAAxB,CAA3C,CAAhB;AACA;;AAEA;AACA,QAAG,YAAYF,UAAf,EACC,KAAKI,UAAL,CAAgBJ,WAAWK,MAA3B;AACD;AACA;AACD;AACA;;;;AAIA,SAAOH,aAAP,CAAqBI,UAArB,EACA;AACC,YAAOA,UAAP;AAEC,WAAK,kBAAL;AACA,WAAK,UAAL;AACC,eAAO,CAAP;AACD;AACC,cAAM,IAAIC,KAAJ,CAAW,4CAA2CD,UAAW,EAAjE,CAAN;AANF;AAQA;AACD;AACA;;;;;;;;;;;AAWA,SAAOD,MAAP,CAAcL,aAAa,EAA3B,EACA;AACC,WAAQ,IAAIH,OAAOW,OAAX,EAAR;AACA;AACD;AACA;;;;AAIAJ,aAAWC,MAAX,EACA;AACC;AACA,QAAGA,OAAON,WAAP,CAAmBU,SAAnB,OAAmCZ,OAAOW,OAAP,CAAeC,SAAf,EAAtC,EACC,MAAM,IAAIF,KAAJ,CAAU,mEAAV,CAAN;AACD;;AAEA;AACA,UAAMG,iBAAiBL,OAAOM,UAAP,CAAkBC,QAAlB,CAA2BC,KAA3B,CAAiC,CAAjC,EAAoC,CAApC,CAAvB;AACA,UAAMC,gBAAgB,IAAIC,UAAJ,CAAeL,cAAf,CAAtB;AACA,QAAIM,OAAOF,cAAc,CAAd,CAAX;AACAA,kBAAc,CAAd,IAAmBA,cAAc,CAAd,CAAnB;AACAA,kBAAc,CAAd,IAAmBE,IAAnB;;AAEA,UAAMC,iBAAiB,IAAIC,WAAJ,CAAgBR,cAAhB,CAAvB;;AAEA,SAAKP,QAAL,GAAgBc,eAAe,CAAf,CAAhB;;AAEA,UAAME,yBAAyBd,OAAOM,UAAP,CAAkBC,QAAlB,CAA2BC,KAA3B,CAAiC,CAAjC,CAA/B;AACA,UAAMO,wBAAwB,IAAIL,UAAJ,CAAeI,sBAAf,CAA9B;AACAH,WAAOI,sBAAsB,CAAtB,CAAP;AACAA,0BAAsB,CAAtB,IAA2BA,sBAAsB,CAAtB,CAA3B;AACAA,0BAAsB,CAAtB,IAA2BJ,IAA3B;;AAEA,UAAMK,yBAAyB,IAAIH,WAAJ,CAAgBC,sBAAhB,CAA/B;;AAEA,SAAKlB,gBAAL,GAAwBoB,uBAAuB,CAAvB,CAAxB;AACA;AACA;AACD;AACA;;;;AAIAC,aACA;AACC;AACA,UAAMH,yBAAyB,IAAII,WAAJ,CAAgB,CAAhB,CAA/B;AACA,UAAMC,uBAAuB,IAAIN,WAAJ,CAAgBC,sBAAhB,CAA7B;;AAEAK,yBAAqB,CAArB,IAA0B,KAAKvB,gBAA/B;;AAEA,UAAMmB,wBAAwB,IAAIL,UAAJ,CAAeI,sBAAf,CAA9B;AACA,QAAIH,OAAOI,sBAAsB,CAAtB,CAAX;AACAA,0BAAsB,CAAtB,IAA2BA,sBAAsB,CAAtB,CAA3B;AACAA,0BAAsB,CAAtB,IAA2BJ,IAA3B;;AAEA,UAAMN,iBAAiB,IAAIa,WAAJ,CAAgB,CAAhB,CAAvB;AACA,UAAME,eAAe,IAAIP,WAAJ,CAAgBR,cAAhB,CAArB;;AAEAe,iBAAa,CAAb,IAAkB,KAAKtB,QAAvB;;AAEA,UAAMW,gBAAgB,IAAIC,UAAJ,CAAeL,cAAf,CAAtB;AACAM,WAAOF,cAAc,CAAd,CAAP;AACAA,kBAAc,CAAd,IAAmBA,cAAc,CAAd,CAAnB;AACAA,kBAAc,CAAd,IAAmBE,IAAnB;AACA;;AAEA;AACA,WAAQ,IAAInB,OAAOW,OAAX,CAAmB;AAC1BI,gBAAU,4BAAcF,cAAd,EAA8BS,sBAA9B;AADgB,KAAnB,CAAR;AAGA;AACA;AACD;AACA;;;;AAIAO,WACA;AACC,WAAO;AACNzB,wBAAkB,KAAKA,gBADjB;AAENE,gBAAU,KAAKA;AAFT,KAAP;AAIA;AACD;AA7ID;kBADqBL,S,EAgJrB","file":"CAVersion.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, utilConcatBuf } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from https://docs.microsoft.com/en-us/windows/desktop/seccrypto/certification-authority-renewal\r\n */\r\nexport default class CAVersion\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for CAVersion class\r\n\t * @param {Object} [parameters={}]\r\n\t * @param {Object} [parameters.schema] asn1js parsed value to initialize the class from\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc certificateIndex\r\n\t\t */\r\n\t\tthis.certificateIndex = getParametersValue(parameters, \"certificateIndex\", CAVersion.defaultValues(\"certificateIndex\"));\r\n\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @desc keyIndex\r\n\t\t */\r\n\t\tthis.keyIndex = getParametersValue(parameters, \"keyIndex\", CAVersion.defaultValues(\"keyIndex\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"certificateIndex\":\r\n\t\t\tcase \"keyIndex\":\r\n\t\t\t\treturn 0;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for CAVersion class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of pre-defined ASN.1 schema for current class\r\n\t *\r\n\t * ASN.1 schema:\r\n\t * ```asn1\r\n\t * CAVersion ::= INTEGER\r\n\t * ```\r\n\t *\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\treturn (new asn1js.Integer());\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tif(schema.constructor.blockName() !== asn1js.Integer.blockName())\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for CAVersion\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tconst keyIndexBuffer = schema.valueBlock.valueHex.slice(0, 2);\r\n\t\tconst keyIndexView8 = new Uint8Array(keyIndexBuffer);\r\n\t\tlet temp = keyIndexView8[0];\r\n\t\tkeyIndexView8[0] = keyIndexView8[1];\r\n\t\tkeyIndexView8[1] = temp;\r\n\r\n\t\tconst keyIndexView16 = new Uint16Array(keyIndexBuffer);\r\n\r\n\t\tthis.keyIndex = keyIndexView16[0];\r\n\r\n\t\tconst certificateIndexBuffer = schema.valueBlock.valueHex.slice(2);\r\n\t\tconst certificateIndexView8 = new Uint8Array(certificateIndexBuffer);\r\n\t\ttemp = certificateIndexView8[0];\r\n\t\tcertificateIndexView8[0] = certificateIndexView8[1];\r\n\t\tcertificateIndexView8[1] = temp;\r\n\r\n\t\tconst certificateIndexView16 = new Uint16Array(certificateIndexBuffer);\r\n\r\n\t\tthis.certificateIndex = certificateIndexView16[0];\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create raw values\r\n\t\tconst certificateIndexBuffer = new ArrayBuffer(2);\r\n\t\tconst certificateIndexView = new Uint16Array(certificateIndexBuffer);\r\n\r\n\t\tcertificateIndexView[0] = this.certificateIndex;\r\n\r\n\t\tconst certificateIndexView8 = new Uint8Array(certificateIndexBuffer);\r\n\t\tlet temp = certificateIndexView8[0];\r\n\t\tcertificateIndexView8[0] = certificateIndexView8[1];\r\n\t\tcertificateIndexView8[1] = temp;\r\n\r\n\t\tconst keyIndexBuffer = new ArrayBuffer(2);\r\n\t\tconst keyIndexView = new Uint16Array(keyIndexBuffer);\r\n\r\n\t\tkeyIndexView[0] = this.keyIndex;\r\n\r\n\t\tconst keyIndexView8 = new Uint8Array(keyIndexBuffer);\r\n\t\ttemp = keyIndexView8[0];\r\n\t\tkeyIndexView8[0] = keyIndexView8[1];\r\n\t\tkeyIndexView8[1] = temp;\r\n\t\t//endregion\r\n\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Integer({\r\n\t\t\tvalueHex: utilConcatBuf(keyIndexBuffer, certificateIndexBuffer)\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\tcertificateIndex: this.certificateIndex,\r\n\t\t\tkeyIndex: this.keyIndex\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}